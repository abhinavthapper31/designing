{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "-xJjxPXiswd7Jatf0IlLR",
      "type": "text",
      "x": 14316.641990491255,
      "y": -31280.41625550701,
      "width": 486.53736270377135,
      "height": 52.866107814814505,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a0",
      "roundness": null,
      "seed": 204549233,
      "version": 60,
      "versionNonce": 587717809,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1738740356874,
      "link": null,
      "locked": false,
      "text": "DISTRIBUTED CACHE",
      "fontSize": 42.292886251851606,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "DISTRIBUTED CACHE",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "qWcVS_wvfjDUPUP0UaAFM",
      "type": "text",
      "x": 13810.345442935171,
      "y": -31178.326195491278,
      "width": 617.7298583984375,
      "height": 211.46443125925802,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a1",
      "roundness": null,
      "seed": 666029585,
      "version": 198,
      "versionNonce": 542394751,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1738741232413,
      "link": null,
      "locked": false,
      "text": "FRs\n    - get(), set(), delete() ops\n    - K-V expiry configurable\n    - eviction policy",
      "fontSize": 42.292886251851606,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "FRs\n    - get(), set(), delete() ops\n    - K-V expiry configurable\n    - eviction policy",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "RTMjJuXbJo04hufFF2CSW",
      "type": "text",
      "x": 14841.728214917428,
      "y": -31179.014482828323,
      "width": 928.667236328125,
      "height": 422.92886251851604,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a2",
      "roundness": null,
      "seed": 1265771999,
      "version": 329,
      "versionNonce": 1018460351,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1738741421853,
      "link": null,
      "locked": false,
      "text": "NFRs\n    - Scale ? QPS (read/Write) and storage\n        (1TB of data and expect to handle \n            a peak of up to 100k QPS.)\n    - The system should be highly available. \n        Eventual consistency (AP).\n    - The system should support low latency \n            operations (< 10ms).",
      "fontSize": 42.292886251851606,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "NFRs\n    - Scale ? QPS (read/Write) and storage\n        (1TB of data and expect to handle \n            a peak of up to 100k QPS.)\n    - The system should be highly available. \n        Eventual consistency (AP).\n    - The system should support low latency \n            operations (< 10ms).",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "m2JaIxGGvih_QGcUZOTKT",
      "type": "text",
      "x": 13833.347046501978,
      "y": -30687.46468401687,
      "width": 352.2574462890625,
      "height": 475.7949703333305,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a3",
      "roundness": null,
      "seed": 1832486993,
      "version": 284,
      "versionNonce": 366599185,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1738741529149,
      "link": null,
      "locked": false,
      "text": "API Design\n\nPOST cache/add\n{\n  \"key\" : \"\"  \n  \"value\": \"...\"\n}\n\n    ",
      "fontSize": 42.292886251851606,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "API Design\n\nPOST cache/add\n{\n  \"key\" : \"\"  \n  \"value\": \"...\"\n}\n\n    ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "-qhcJBN78AnJoGtdM9-yE",
      "type": "text",
      "x": 13829.043851771228,
      "y": -30267.55693896116,
      "width": 368.65203857421875,
      "height": 475.7949703333305,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a4",
      "roundness": null,
      "seed": 1499802033,
      "version": 361,
      "versionNonce": 362681087,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1738741581687,
      "link": null,
      "locked": false,
      "text": "\nGET cache/<key>\n\nResponse : \n{\n  \"value\": \"...\"\n}\n\n    ",
      "fontSize": 42.292886251851606,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "\nGET cache/<key>\n\nResponse : \n{\n  \"value\": \"...\"\n}\n\n    ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "h1LLGlrBgFVOOYLH_aGtZ",
      "type": "text",
      "x": 14335.723161436772,
      "y": -30635.597562130166,
      "width": 450.4192199707031,
      "height": 264.33053907407253,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a5",
      "roundness": null,
      "seed": 696223295,
      "version": 402,
      "versionNonce": 2030789233,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1738741570724,
      "link": null,
      "locked": false,
      "text": "\nDELETE cache/<key>\n200OK\n\n    ",
      "fontSize": 42.292886251851606,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "\nDELETE cache/<key>\n200OK\n\n    ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "YwoC70UcgNAFkjPb7N7s7",
      "type": "rectangle",
      "x": 14024.673657569014,
      "y": -29571.59490745447,
      "width": 282.9852068457804,
      "height": 225.56791850025908,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a6",
      "roundness": {
        "type": 3
      },
      "seed": 1894227953,
      "version": 268,
      "versionNonce": 1705898431,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "b39S_JG6FAvIujX7fi9Fb",
          "type": "arrow"
        }
      ],
      "updated": 1738752420654,
      "link": null,
      "locked": false
    },
    {
      "id": "cvEhyofJ4IpqowZehl9eo",
      "type": "text",
      "x": 14090.293415678181,
      "y": -29471.657885347664,
      "width": 143.36080310968828,
      "height": 45.79631970241136,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "a7",
      "roundness": null,
      "seed": 1711216113,
      "version": 169,
      "versionNonce": 222154239,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1738752420654,
      "link": null,
      "locked": false,
      "text": "CLIENT",
      "fontSize": 36.63705576192908,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "CLIENT",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "StElRMk9ETvrfFTfiosV4",
      "type": "rectangle",
      "x": 14793.582870809614,
      "y": -29656.235378000805,
      "width": 386.0604973111713,
      "height": 320.810835793789,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aA",
      "roundness": {
        "type": 3
      },
      "seed": 927738975,
      "version": 162,
      "versionNonce": 1970386463,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "CDJXe1zp7aXLXJ3FuxC1f",
          "type": "arrow"
        },
        {
          "id": "M8NbDCP_pCNLG8kvIcqE_",
          "type": "arrow"
        }
      ],
      "updated": 1738752420654,
      "link": null,
      "locked": false
    },
    {
      "id": "B49l5fSixTF4EOKyN7WAU",
      "type": "text",
      "x": 14929.519665637492,
      "y": -29533.560710026424,
      "width": 136.54988259482343,
      "height": 83.26212685349661,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aB",
      "roundness": null,
      "seed": 1512064785,
      "version": 119,
      "versionNonce": 47404671,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1738752420654,
      "link": null,
      "locked": false,
      "text": "CACHE \nSERVER",
      "fontSize": 33.304850741398646,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "CACHE \nSERVER",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "b39S_JG6FAvIujX7fi9Fb",
      "type": "arrow",
      "x": 14310.409659032539,
      "y": -29463.595210386004,
      "width": 81.0868124429162,
      "height": 1.2996214163031254,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aC",
      "roundness": {
        "type": 2
      },
      "seed": 967062737,
      "version": 390,
      "versionNonce": 365816785,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1738752420761,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          81.0868124429162,
          -1.2996214163031254
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "YwoC70UcgNAFkjPb7N7s7",
        "focus": -0.021489433339528574,
        "gap": 2.7507946177447593,
        "fixedPoint": null
      },
      "endBinding": null,
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false
    },
    {
      "id": "CDJXe1zp7aXLXJ3FuxC1f",
      "type": "arrow",
      "x": 14385.772486325983,
      "y": -29468.642601138334,
      "width": 410.52912038018985,
      "height": 0,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aE",
      "roundness": {
        "type": 2
      },
      "seed": 285749183,
      "version": 242,
      "versionNonce": 2107787697,
      "isDeleted": false,
      "boundElements": [
        {
          "type": "text",
          "id": "ACSXZhTM9tpdjur_O87Ec"
        }
      ],
      "updated": 1738752420761,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          410.52912038018985,
          0
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": null,
      "endBinding": {
        "elementId": "StElRMk9ETvrfFTfiosV4",
        "focus": -0.1694915254237392,
        "gap": 1,
        "fixedPoint": null
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false
    },
    {
      "id": "ACSXZhTM9tpdjur_O87Ec",
      "type": "text",
      "x": 14293.161162017801,
      "y": -29260.828979112837,
      "width": 283.219970703125,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aF",
      "roundness": null,
      "seed": 963556991,
      "version": 24,
      "versionNonce": 1245882751,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1738743326256,
      "link": null,
      "locked": false,
      "text": "get(), set(), delete()",
      "fontSize": 28,
      "fontFamily": 5,
      "textAlign": "center",
      "verticalAlign": "middle",
      "containerId": "CDJXe1zp7aXLXJ3FuxC1f",
      "originalText": "get(), set(), delete()",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "4LPEltvRGLHyfACCk81wZ",
      "type": "text",
      "x": 15253.049237327843,
      "y": -29563.79835751785,
      "width": 559.5241088867188,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aG",
      "roundness": null,
      "seed": 1416456337,
      "version": 135,
      "versionNonce": 634409695,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1738752420654,
      "link": null,
      "locked": false,
      "text": "Cache is just a HashMap (KV) in memory. ",
      "fontSize": 28,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Cache is just a HashMap (KV) in memory. ",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "CNPlT16Ja4ePHxQox-_BG",
      "type": "text",
      "x": 15261.38753661046,
      "y": -29506.04345918651,
      "width": 595.3324829459352,
      "height": 382.5686432786351,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aH",
      "roundness": null,
      "seed": 1404164767,
      "version": 356,
      "versionNonce": 1730191103,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1738752420654,
      "link": null,
      "locked": false,
      "text": "Node : {\n    key,\n    value,\n    expiry_ts\n}\n\nHashMap<Key, Node> storage ; (to store)\n\nDeque<Node> dll ; (to maintain usage order)\n\n",
      "fontSize": 27.823174056628,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Node : {\n    key,\n    value,\n    expiry_ts\n}\n\nHashMap<Key, Node> storage ; (to store)\n\nDeque<Node> dll ; (to maintain usage order)\n\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "U10FhJI3PIyirJzSaVCge",
      "type": "ellipse",
      "x": 14507.066400611531,
      "y": -29065.701274832736,
      "width": 177.41942379301327,
      "height": 175.28184037382016,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aI",
      "roundness": {
        "type": 2
      },
      "seed": 1674780383,
      "version": 166,
      "versionNonce": 215115551,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "M8NbDCP_pCNLG8kvIcqE_",
          "type": "arrow"
        }
      ],
      "updated": 1738752420654,
      "link": null,
      "locked": false
    },
    {
      "id": "hQb4slw8gOLQQPL6Y7hmY",
      "type": "text",
      "x": 14543.40531873781,
      "y": -28997.298605418564,
      "width": 76.83200073242188,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aJ",
      "roundness": null,
      "seed": 740361457,
      "version": 114,
      "versionNonce": 487353183,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1738752420654,
      "link": null,
      "locked": false,
      "text": "CRON",
      "fontSize": 28,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "CRON",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "M8NbDCP_pCNLG8kvIcqE_",
      "type": "arrow",
      "x": 14660.972406793422,
      "y": -29044.32544064081,
      "width": 243.68450978799592,
      "height": 288.5737615910439,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aM",
      "roundness": {
        "type": 2
      },
      "seed": 2090084415,
      "version": 483,
      "versionNonce": 1173246321,
      "isDeleted": false,
      "boundElements": [],
      "updated": 1738752420762,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          222.30867559606668,
          -36.33891812627917
        ],
        [
          243.68450978799592,
          -288.5737615910439
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "U10FhJI3PIyirJzSaVCge",
        "focus": -0.6259876598789585,
        "gap": 4.798200223969815,
        "fixedPoint": null
      },
      "endBinding": {
        "elementId": "StElRMk9ETvrfFTfiosV4",
        "focus": 0.3298190686465646,
        "gap": 2.5253399751636607,
        "fixedPoint": null
      },
      "startArrowhead": null,
      "endArrowhead": "arrow",
      "elbowed": false
    },
    {
      "id": "HInJXt-noZhpPLVVGibWh",
      "type": "text",
      "x": 14668.489829944181,
      "y": -29243.520031272205,
      "width": 134.5959930419922,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aO",
      "roundness": null,
      "seed": 1650373425,
      "version": 104,
      "versionNonce": 2101501855,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1738752420654,
      "link": null,
      "locked": false,
      "text": "to remove",
      "fontSize": 28,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "to remove",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "DcwgokR7X7K235LLgjWoZ",
      "type": "text",
      "x": 14621.393829272794,
      "y": -29198.520031272205,
      "width": 228.78799438476562,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aP",
      "roundness": null,
      "seed": 2122191967,
      "version": 104,
      "versionNonce": 1177752511,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1738752420654,
      "link": null,
      "locked": false,
      "text": "expired K-V pairs",
      "fontSize": 28,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "expired K-V pairs",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "ayU4oKMnTimlUrBTEn6mZ",
      "type": "text",
      "x": 14592.847824023771,
      "y": -29153.520031272205,
      "width": 285.8800048828125,
      "height": 35,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aQ",
      "roundness": null,
      "seed": 1063462161,
      "version": 104,
      "versionNonce": 1933067231,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1738752420654,
      "link": null,
      "locked": false,
      "text": "(run every n minutes)",
      "fontSize": 28,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "(run every n minutes)",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "6-tmKaRmlBwgQqd3972C8",
      "type": "text",
      "x": 13719.084850915677,
      "y": -28792.063513041765,
      "width": 2093.421142578125,
      "height": 525,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aR",
      "roundness": null,
      "seed": 1150651359,
      "version": 1396,
      "versionNonce": 375581791,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1738752427520,
      "link": null,
      "locked": false,
      "text": "ENSURE SCALE : \n    - We need to go to 100K req per sec and storage of app. 1TB. (we need to scale out)\n    - but how many nodes ? (WRT this case this is sharding even though the data is on servers, DB sharing would need a \"shard key\")\n        assume an AWS server instance has 32 GB ram, so storage needs = 1024GB/32GB = 32 instances. \n        assume an AWS server can do 20k req per second (by benchmarking performance), so nodes needed\n        storage needs >>>>>> through put needs. (32 nodes)\n    - How to achieve even distribution ? CONSISTENT HASHING (https://www.hellointerview.com/learn/system-design/deep-dives/cassandra#partitioning)\n\n\nENSURE HIGH AVAILABILITY AND FAULT TOLERANCE : \n    - Each server should have replicas (Master will receive writes and propogate them to the slaves asynchronously, slaves will be read only.)\n        Above approach will have some staleness, (time master takes to propagate writes.)    \n    - Gossip Protocol (all the replicas are of equal importance, each node maintains a list of servers to whom it propogates changes (gossip), eventually\n    all nodes have same state, eventually consistent !) difficult to implement, conflict resolution ()\n",
      "fontSize": 28,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "ENSURE SCALE : \n    - We need to go to 100K req per sec and storage of app. 1TB. (we need to scale out)\n    - but how many nodes ? (WRT this case this is sharding even though the data is on servers, DB sharing would need a \"shard key\")\n        assume an AWS server instance has 32 GB ram, so storage needs = 1024GB/32GB = 32 instances. \n        assume an AWS server can do 20k req per second (by benchmarking performance), so nodes needed\n        storage needs >>>>>> through put needs. (32 nodes)\n    - How to achieve even distribution ? CONSISTENT HASHING (https://www.hellointerview.com/learn/system-design/deep-dives/cassandra#partitioning)\n\n\nENSURE HIGH AVAILABILITY AND FAULT TOLERANCE : \n    - Each server should have replicas (Master will receive writes and propogate them to the slaves asynchronously, slaves will be read only.)\n        Above approach will have some staleness, (time master takes to propagate writes.)    \n    - Gossip Protocol (all the replicas are of equal importance, each node maintains a list of servers to whom it propogates changes (gossip), eventually\n    all nodes have same state, eventually consistent !) difficult to implement, conflict resolution ()\n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "DJ22-EEPRUS3MyPypSyMM",
      "type": "text",
      "x": 13726.267645134167,
      "y": -28251.900243066695,
      "width": 2213.364501953125,
      "height": 630,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aS",
      "roundness": null,
      "seed": 679527761,
      "version": 359,
      "versionNonce": 757336191,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1738752427520,
      "link": null,
      "locked": false,
      "text": "HOTKEY PROB\n    - When too many requests concentrate on a single shard holding popular keys, it creates a hotspot that can degrade performance for that entire shard.\n    - There are two distinct types of hot key problems we need to handle:\n            Hot reads: Keys that receive an extremely high volume of read requests, like a viral tweet's data that millions of users are trying to view simultaneously\n            Hot writes: Keys that receive many concurrent write requests, like a counter tracking real-time votes.\n\n    HOT READS : \n        -  If a key in a shard like (user:761) has become \"read\" hot, then that key must be moved to other shards, (one shard tolerating 100K TPS vs 4 \n            shards handling 25k tps each)\n        - Here's how it works:\n            First, the system monitors key access patterns to detect hot keys that are frequently read(OVERHEAD)\n            When a key becomes \"hot\", instead of having just one copy as user:123, the system creates multiple copies with different suffixes:\n                user:123#1 -> Node A stores a copy\n                user:123#2 -> Node B stores a copy\n                user:123#3 -> Node C stores a copy\n            These copies get distributed to different nodes via consistent hashing (OVERHEAD)\n            For reads, clients randomly choose one of the suffixed keys, spreading read load across multiple nodes\n            For writes, the system must update all copies to maintain consistency",
      "fontSize": 28,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "HOTKEY PROB\n    - When too many requests concentrate on a single shard holding popular keys, it creates a hotspot that can degrade performance for that entire shard.\n    - There are two distinct types of hot key problems we need to handle:\n            Hot reads: Keys that receive an extremely high volume of read requests, like a viral tweet's data that millions of users are trying to view simultaneously\n            Hot writes: Keys that receive many concurrent write requests, like a counter tracking real-time votes.\n\n    HOT READS : \n        -  If a key in a shard like (user:761) has become \"read\" hot, then that key must be moved to other shards, (one shard tolerating 100K TPS vs 4 \n            shards handling 25k tps each)\n        - Here's how it works:\n            First, the system monitors key access patterns to detect hot keys that are frequently read(OVERHEAD)\n            When a key becomes \"hot\", instead of having just one copy as user:123, the system creates multiple copies with different suffixes:\n                user:123#1 -> Node A stores a copy\n                user:123#2 -> Node B stores a copy\n                user:123#3 -> Node C stores a copy\n            These copies get distributed to different nodes via consistent hashing (OVERHEAD)\n            For reads, clients randomly choose one of the suffixed keys, spreading read load across multiple nodes\n            For writes, the system must update all copies to maintain consistency",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "hvRX2R-eS5bhV82859xI9",
      "type": "text",
      "x": 13749.880597400608,
      "y": -27584.460952899295,
      "width": 2756.879150390625,
      "height": 490,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aT",
      "roundness": null,
      "seed": 110274527,
      "version": 705,
      "versionNonce": 1638703263,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1738752427520,
      "link": null,
      "locked": false,
      "text": "    HOT WRITES :\n        - Write batching : eg if we are getting 10K TPS, instead of doing 10K write ops, we can batch them over a time period of 100-200 ms and then do a single atomic update\n             this would significantly reduce write load. Very useful when we are dealing with final values of counters, where we are concerned with final value. \n                CONS : low write visibility (as writes are batched now) ,also introduces slight inconsistency in read operations, as there's always some amount of pending writes in the buffer.\n                    this is useful when, immediate write visibility is not needed. \n\n        - Shard the write key across nodes : \n            Instead of having a single counter or value that receives all writes, the system spreads writes across multiple shards using a suffix strategy. For example, a hot counter key \n            \"views:video123\" might be split into 10 shards: \"views:video123:1\" through \"views:video123:10\". When a write arrives, the system randomly selects one of these shards to update.\n            This approach effectively distributes write load across multiple nodes in the cluster. For our viral video example with 10,000 writes per second, using 10 shards would reduce the per-shard\n             write load to roughly 1,000 operations per second. When reading the total value, the system simply needs to sum the values from all shards. This technique is particularly powerful because it \n            works with any operation that can be decomposed and recomposed, not just simple counters.\n         \n",
      "fontSize": 28,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "    HOT WRITES :\n        - Write batching : eg if we are getting 10K TPS, instead of doing 10K write ops, we can batch them over a time period of 100-200 ms and then do a single atomic update\n             this would significantly reduce write load. Very useful when we are dealing with final values of counters, where we are concerned with final value. \n                CONS : low write visibility (as writes are batched now) ,also introduces slight inconsistency in read operations, as there's always some amount of pending writes in the buffer.\n                    this is useful when, immediate write visibility is not needed. \n\n        - Shard the write key across nodes : \n            Instead of having a single counter or value that receives all writes, the system spreads writes across multiple shards using a suffix strategy. For example, a hot counter key \n            \"views:video123\" might be split into 10 shards: \"views:video123:1\" through \"views:video123:10\". When a write arrives, the system randomly selects one of these shards to update.\n            This approach effectively distributes write load across multiple nodes in the cluster. For our viral video example with 10,000 writes per second, using 10 shards would reduce the per-shard\n             write load to roughly 1,000 operations per second. When reading the total value, the system simply needs to sum the values from all shards. This technique is particularly powerful because it \n            works with any operation that can be decomposed and recomposed, not just simple counters.\n         \n",
      "autoResize": true,
      "lineHeight": 1.25
    },
    {
      "id": "UgB29dPydBExPwmK1AQTq",
      "type": "text",
      "x": 13815.25298586302,
      "y": -29762.2652190728,
      "width": 785.0361328125,
      "height": 140,
      "angle": 0,
      "strokeColor": "#1e1e1e",
      "backgroundColor": "transparent",
      "fillStyle": "solid",
      "strokeWidth": 2,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "frameId": null,
      "index": "aU",
      "roundness": null,
      "seed": 298291007,
      "version": 134,
      "versionNonce": 73560063,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1738752420654,
      "link": null,
      "locked": false,
      "text": "The client here is a bit different than the client we're\nused to seeing in other designs. \nIt's not an end user, it's a service within your\napplication.",
      "fontSize": 28,
      "fontFamily": 5,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "The client here is a bit different than the client we're used to seeing in other designs. \nIt's not an end user, it's a service within your application.",
      "autoResize": false,
      "lineHeight": 1.25
    }
  ],
  "appState": {
    "gridSize": 20,
    "gridStep": 5,
    "gridModeEnabled": false,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}